#cloud-config
users:
  - name: core
ssh_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDkdp7+1EAwfTLlrJd10fKeLqedYh6qwlpXCtk3dtChqwxKNYvNxGJV7n34earmU0hxt26oqrXCLnp1OBlqO1SifKSqwr5+LIpz2uJxHA/wqVOMHmrzTlWMw8ljCBvDcQi323USt9IxqvO9WLICiVSujXYGReVcg9QGoyViAz1NTQ== core@example.com
coreos:
  units:
    - name: format-lvm.service
      command: start
      runtime: true
      content: |
        [Unit]
        Description=Format lvm
        Requires=dev-sdb.device
        After=dev-sdb.device
        ConditionFirstBoot=true
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/sbin/wipefs -f /dev/sdb
        ExecStart=/usr/sbin/pvcreate -f /dev/sdb
        ExecStart=/usr/sbin/vgcreate vg01 /dev/sdb
        ExecStart=/usr/sbin/lvcreate -L 99G --name docker_vol vg01
        ExecStart=/usr/sbin/mkfs.ext4 -F /dev/vg01/docker_vol
    - name: var-lib-docker.mount
      command: start
      content: |
        [Unit]
        Description=Mount /var/lib/docker
        Requires=format-lvm.service
        After=format-lvm.service
        [Mount]
        What=/dev/vg01/docker_vol
        Where=/var/lib/docker
        Type=ext4
    - name: docker-tcp.socket
      command: start
      content: |
        [Unit]
        Description=Docker TCP Socket for the API
        [Socket]
        ListenStream=2375
        Service=docker.service
        [Install]
        WantedBy=sockets.target
    - name: docker.service
      drop-ins:
        - name: 10-wait-docker.conf
          content: |
            [Unit]
            After=docker.socket network.target var-lib-docker.mount etcd2.service
            Requires=docker.socket var-lib-docker.mount etcd2.service
        - name: 20-docker.conf
          content: |
            [Service]
            Environment="DOCKER_OPTS=--cluster-store=etcd://localhost:2379 --cluster-advertise=ens192:2375 --registry-mirror=https://brxyngac.mirror.aliyuncs.com"
    - name: settimezone.service
      command: start
      content: |
        [Unit]
        Description=Set the time zone
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/timedatectl set-timezone Asia/Shanghai
    - name: etcd2-discovery-url.service
      command: start
      runtime: true
      content: |
        [Unit]
        Description=Set etcd discovery url from ovfEnv
        Requires=vmtoolsd.service
        After=vmtoolsd.service
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStartPre=/usr/bin/echo 'Writing file to "/etc/etcd2.env"'
        ExecStart=/srv/setup-etcd2-discovery-env
        ExecStart=/usr/bin/echo 'Wrote file to "/etc/etcd2.env"'
    - name: etcd2.service
      command: start
      drop-ins:
        - name: 30-discovery.conf
          content: |
            [Unit]
            Requires=etcd2-discovery-url.service
            After=etcd2-discovery-url.service
            [Service]
            EnvironmentFile=/etc/etcd2.env
    - name: advertise-swarm-node.service
      content: |
        [Unit]
        Requires=docker.service etcd2.service
        After=docker.service etcd2.service
        [Service]
        Type=oneshot
        ExecStart=/srv/advertise-swarm-node
    - name: advertise-swarm-manager.service
      content: |
        [Unit]
        Requires=docker.service etcd2.service
        After=docker.service etcd2.service
        [Service]
        Type=oneshot
        ExecStart=/srv/advertise-swarm-manager
  etcd2:
    initial-advertise-peer-urls: http://$private_ipv4:2380
    advertise-client-urls: http://$private_ipv4:2379,http://$private_ipv4:4001
    listen-peer-urls: http://$private_ipv4:2380
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
  update:
    reboot-strategy: etcd-lock
write_files:
  - path: /srv/setup-etcd2-discovery-env
    permissions: 0755
    owner: root
    content: |
      #!/usr/bin/env sh
      ENV_FILE_PATH=/etc/etcd2.env
      
      LINE=$(/usr/share/oem/bin/vmtoolsd --cmd "info-get guestinfo.ovfEnv" | grep guestinfo.etcd.discovery.url)
      LINE=${LINE##*oe:value=}
      URL=${LINE%/>}
      echo ETCD_DISCOVERY=${URL} > ${ENV_FILE_PATH}
  - path: /srv/advertise-swarm-node
    permissions: 0755
    owner: root
    content: |
      #!/usr/bin/env sh
      
      /usr/bin/docker run --name swarm \
        --restart=unless-stopped \
        -d swarm \
        join \
        --advertise=$private_ipv4:2375 \
        etcd://$private_ipv4:2379
  - path: /srv/advertise-swarm-manager
    permissions: 0755
    owner: root
    content: |
      #!/bin/bash
      
      /usr/bin/docker run --name swarm-manager \
        --restart=unless-stopped \
        -p 9999:2375 \
        -d swarm \
        manage \
        --replication \
        --advertise $private_ipv4:9999 \
        etcd://$private_ipv4:2379
